//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CharacterNameComponent characterName { get { return (CharacterNameComponent)GetComponent(GameComponentsLookup.CharacterName); } }
    public bool hasCharacterName { get { return HasComponent(GameComponentsLookup.CharacterName); } }

    public void AddCharacterName(string newFname, string newGname) {
        var index = GameComponentsLookup.CharacterName;
        var component = (CharacterNameComponent)CreateComponent(index, typeof(CharacterNameComponent));
        component.fname = newFname;
        component.gname = newGname;
        AddComponent(index, component);
    }

    public void ReplaceCharacterName(string newFname, string newGname) {
        var index = GameComponentsLookup.CharacterName;
        var component = (CharacterNameComponent)CreateComponent(index, typeof(CharacterNameComponent));
        component.fname = newFname;
        component.gname = newGname;
        ReplaceComponent(index, component);
    }

    public void RemoveCharacterName() {
        RemoveComponent(GameComponentsLookup.CharacterName);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCharacterName;

    public static Entitas.IMatcher<GameEntity> CharacterName {
        get {
            if (_matcherCharacterName == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CharacterName);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCharacterName = matcher;
            }

            return _matcherCharacterName;
        }
    }
}
